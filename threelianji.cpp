#include<iostream>
using namespace std;

// n1,n2,n3 表示要求的三个数。
// 其中 n1 最小，n2=n1*2，n3=n1*3 
int n1, n2, n3;

// 检查由 n1 组成的三个数，是否满足要求。
// 如果满足要求，直接在函数里输出。 
void check( )
{
	// 如果 n1 比 333 大，则 n3 会超过三位数范围。 
	if (n1 > 333) return;
	// 从 n1 构造 n2 和 n3 
	n2 = n1 * 2;
	n3 = n1 * 3;

	// d[i] 表示 i 位置的数字被使用的次数，最开始标记为 0。
	int d[10] = {0};

	d[n1 % 10] ++; //n1的个位 
	d[n1 / 10 % 10] ++; //n1的十位 
	d[n1 / 100] ++; //n1的百位 
	
	d[n2 % 10] ++;
	d[n2 / 10 % 10] ++;
	d[n2 / 100] ++;

	d[n3 % 10] ++;
	d[n3 / 10 % 10] ++;
	d[n3 / 100] ++;

	// 如果 n1, n2, n3 满足条件，那 9 个数应该刚好每个被使用过一次。 
	for (int i=1; i<=9; i++) {
		if (d[i] != 1) {
			// 如果 d[i] 被使用的次数不是一次，则退出。 
			return;
		}
	}

	cout << n1 << ' ' << n2 << ' ' << n3 << endl;
}

int main()
{
	int i, j, k;

	// 三重循环，分别是 n1 的三个数位从 1 循环到 9 
	// 其中，第一位只能取 1,2,3 
	for (i = 1; i <= 3; i++) {
		for (j = 1; j <= 9; j++) {
			if (i == j) continue;
			for (k = 1; k <= 9; k++) {
				n1 = i*100 + j*10 + k; 
				// n1的百位、十位、各位都应不同 
				if (j == k || i == k) continue;
				check();
			}
		}
	}
	return 0; 
}
